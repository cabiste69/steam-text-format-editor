@page "/"

<head>
    <style>
        #inputText {
            width: 50%;
            float: left;
            padding-left: 10px;
            padding-top: 10px;
        }

        #outputText {
            width: 50%;
            float: right;
        }

        .steamBlue {
            background-color: #1c2738;
        }

        .black {
            background-color: black;
            /*padding-top: 16px;*/
        }
    </style>
</head>

<EditorBar />
@*
    <MudPaper Square="true" Class="d-flex justify-space-around">
    <MudTextField @bind-Value="AnimationEntrance" Label="Entrance Class (copy and paste from style tag)" />
    </MudPaper>
    <MudDivider Vertical="true" FlexItem="true" />
    <MudPaper Square="true" Class="d-flex justify-space-around">
    <MudTextField @bind-Value="AnimationEntrance" Label="Entrance Class (copy and paste from style tag)" />
    </MudPaper>
*@


<!--Make the text field take the full container area-->
<div id="inputText">
    <MudPaper Class="pt-8 pl-8 pb-0 black" Elevation="0" MinHeight="800px">
        <MudTextField Immediate="true" T="string" Variant="Variant.Text" @bind-Text="InputText" FullWidth="true" Lines="_inputHeight" DisableUnderLine="true" />
    </MudPaper>
</div>

<div id="outputText">
    <MudPaper Class="pa-16 ma-2 steamBlue" Outlined="true" Height="@(_outputHeight+"px")" MinHeight="800px">
        @((MarkupString)_outputText)
    </MudPaper>
</div>
@code {
    Dictionary<string, string> steamMarkup = new Dictionary<string, string>()
    {
        {"[h1]", "<hr><h1>"},
        {"[/h1]", "</h1>"},
        {"[b]", "<b>"},
        {"[/b]", "</b>"},
        {"[u]", "<u>"},
        {"[/u]", "</u>"},
        {"[i]", "<i>"},
        {"[/i]", "</i>"},
        {"[strike]", "<del>"},
        {"[/strike]", "</del>"},
        //list stuff
        {"[list]", ""},
        {"[/list]", ""},
        {"[olist]", "<ol>"},
        {"[/olist]", "</ol>"},
        {"[*]", "<li>"},
        //list end
        {"[code]", "<code class=\"codeblock\">"},
        {"[/code]", "</code>"},
        //table stuff
        {"[table]","<table border='1'>"},
        {"[/table]", "</table>"},
        {"[tr]", "<tr>"},
        {"[/tr]", "</tr>"},
        {"[th]", "<th>"},
        {"[/th]", "</th>"},
        {"[td]", "<td>"},
        {"[/td]", "</td>"},
        {"\n", "<br />"}
    };
    private int _inputHeight = 10;
    private string _inputText = "this is a website to preview steam text format in an easy way \n for the list of the available markup tags go here \n https://steamcommunity.com/comment/Guide/formattinghelp \n and as you can see this is still a work in progress";
    private string _outputHeight = "35";
    private string _outputText = "";
    private string _wipText = "";
    public string InputText
    {
        get
        {
            return _inputText;
        }
        set
        {
            _inputText = value;
            _wipText = value;
            CountLines();
            ConvertToHtml();
        }
    }

    void ConvertToHtml()
    {
        foreach (string key in steamMarkup.Keys)
        {
            _wipText = _wipText.Replace(key, steamMarkup[key]);
        }

        _outputText = _wipText.Trim();
    }

    void CountLines()
    {
        _inputHeight = 3 + _inputText.Split("\n").Length;
        _outputHeight = ((_inputHeight * 19) + 35).ToString();
    }
}
